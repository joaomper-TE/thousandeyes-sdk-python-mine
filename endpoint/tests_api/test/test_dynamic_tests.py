# coding: utf-8

"""
    Endpoint Tests API

     ## Overview Manage endpoint agent dynamic and scheduled tests using the Endpoint Tests API.

    The version of the OpenAPI document: 7.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from tests_api.models.dynamic_tests import DynamicTests

class TestDynamicTests(unittest.TestCase):
    """DynamicTests unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DynamicTests:
        """Test DynamicTests
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DynamicTests`
        """
        model = DynamicTests()
        if include_optional:
            return DynamicTests(
                tests = [
                    tests_api.models.dynamic_test.DynamicTest(
                        _links = tests_api.models.dynamic_test_links.DynamicTestLinks(
                            self = null, 
                            test_results = [{"href":"https://api.thousandeyes.com/v7/endpoint/test-results/dynamic-tests/281474976710706/network/filter"},{"href":"https://api.thousandeyes.com/v7/endpoint/test-results/dynamic-tests/281474976710706/pathvis"}], ), 
                        agent_selector_config = tests_api.models.endpoint_agent_selector_config.EndpointAgentSelectorConfig(), 
                        application = 'webex', 
                        created_date = '2022-07-17T22:00:54Z', 
                        interval = 120, 
                        is_enabled = True, 
                        has_path_trace_in_session = null, 
                        has_ping = True, 
                        has_traceroute = True, 
                        modified_date = '2022-07-17T22:00:54Z', 
                        network_measurements = null, 
                        protocol = 'icmp', 
                        tcp_probe_mode = null, 
                        test_id = '281474976710706', 
                        aid = null, 
                        test_name = 'Test name', )
                    ]
            )
        else:
            return DynamicTests(
        )
        """

    def testDynamicTests(self):
        """Test DynamicTests"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Tests API

     ### Overview This API supports listing, creating, editing, and deleting Cloud and Enterprise Agent (CEA) based tests.

    The version of the OpenAPI document: 7.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from tests_api.models.update_sip_server_test import UpdateSipServerTest

class TestUpdateSipServerTest(unittest.TestCase):
    """UpdateSipServerTest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateSipServerTest:
        """Test UpdateSipServerTest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateSipServerTest`
        """
        model = UpdateSipServerTest()
        if include_optional:
            return UpdateSipServerTest(
                interval = 120,
                alerts_enabled = True,
                enabled = True,
                alert_rules = [344753, 212697],
                created_by = 'user@user.com',
                created_date = '2022-07-17T22:00:54Z',
                description = 'ThousandEyes Test',
                live_share = False,
                modified_by = 'user@user.com',
                modified_date = '2022-07-17T22:00:54Z',
                saved_event = True,
                test_id = '281474976710706',
                test_name = 'ThousandEyes Test',
                type = 'sip-server',
                links = tests_api.models.unexpanded_instant_test__links.UnexpandedInstantTest__links(
                    self = null, 
                    test_results = [{"href":"https://api.thousandeyes.com/v7/test-results/281474976710706/network"},{"href":"https://api.thousandeyes.com/v7/test-results/281474976710706/pathvis"}], ),
                labels = [9842, 1283],
                shared_with_accounts = [2087, 100],
                agents = [
                    {"agentId":"125","sourceIpAddress":"1.1.1.1"}
                    ],
                auth_user = 'username',
                mtu_measurements = False,
                network_measurements = True,
                options_regex = '["a-z"]',
                password = 'password',
                path_trace_mode = 'classic',
                port = 1,
                protocol = 'tcp',
                register_enabled = True,
                sip_registrar = 'voice.thousandeyes.com',
                sip_target_time = 100,
                sip_time_limit = 5,
                target_sip_credentials = tests_api.models.test_sip_credentials.TestSipCredentials(
                    auth_user = 'username', 
                    password = 'password', 
                    port = 1024, 
                    protocol = 'tcp', 
                    sip_registrar = 'sip.thousandeyes.com', 
                    user = 'username', ),
                user = 'username',
                fixed_packet_rate = 50,
                ipv6_policy = 'use-agent-policy',
                bgp_measurements = True
            )
        else:
            return UpdateSipServerTest(
                interval = 120,
                agents = [
                    {"agentId":"125","sourceIpAddress":"1.1.1.1"}
                    ],
                port = 1,
                target_sip_credentials = tests_api.models.test_sip_credentials.TestSipCredentials(
                    auth_user = 'username', 
                    password = 'password', 
                    port = 1024, 
                    protocol = 'tcp', 
                    sip_registrar = 'sip.thousandeyes.com', 
                    user = 'username', ),
        )
        """

    def testUpdateSipServerTest(self):
        """Test UpdateSipServerTest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

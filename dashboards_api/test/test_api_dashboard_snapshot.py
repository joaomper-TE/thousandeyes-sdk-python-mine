# coding: utf-8

"""
    Dashboards API

    Manage ThousandEyes Dashboards

    The version of the OpenAPI document: 7.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from dashboards_api.models.api_dashboard_snapshot import ApiDashboardSnapshot

class TestApiDashboardSnapshot(unittest.TestCase):
    """ApiDashboardSnapshot unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiDashboardSnapshot:
        """Test ApiDashboardSnapshot
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiDashboardSnapshot`
        """
        model = ApiDashboardSnapshot()
        if include_optional:
            return ApiDashboardSnapshot(
                links = dashboards_api.models.dashboard_snapshot_links__links.DashboardSnapshotLinks__links(
                    self = dashboards_api.models.link.Link(
                        href = 'https://api.thousandeyes.com/v7/link/to/resource/id', 
                        templated = True, 
                        type = '', 
                        deprecation = '', 
                        name = '', 
                        profile = '', 
                        title = '', 
                        hreflang = '', ), 
                    app_link = dashboards_api.models.link.Link(
                        href = 'https://api.thousandeyes.com/v7/link/to/resource/id', 
                        templated = True, 
                        type = '', 
                        deprecation = '', 
                        name = '', 
                        profile = '', 
                        title = '', 
                        hreflang = '', ), ),
                snapshot_id = 'd28bb71f-5a47-4783-8f12-d4b115e61b0c',
                snapshot_name = 'HTTP Server Dashboard Snapshot',
                aid = '10',
                is_shared = True,
                snapshot_created_date = '2023-05-16T10:14:28Z',
                dashboard = None,
                widgets = [
                    null
                    ],
                is_scheduled = True,
                time_span = dashboards_api.models.api_report_snapshot_time_span.ApiReportSnapshotTimeSpan(
                    start = '2023-05-16T10:14:28Z', 
                    duration = 60, ),
                snapshot_expiration_date = '2023-05-16T10:14:28Z'
            )
        else:
            return ApiDashboardSnapshot(
        )
        """

    def testApiDashboardSnapshot(self):
        """Test ApiDashboardSnapshot"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Administrative API

    ## Overview Manage users, accounts, and account groups in the ThousandEyes platform using the Administrative API.  This API provides the following endpoints that define the operations to manage your organization:     * `/account-groups`: Account groups are used to divide an organization into different sections. These endpoints can be used to create, retrieve, update and delete account groups.   * `/users`: Create, retrieve, update and delete users within an organization.    * `/roles`: Create, retrieve and update roles for the current user.    * `/permissions`: Retrieve all assignable permissions. Used in the context of modifying roles.    * `/audit-user-events`: Retrieve all activity log events.

    The version of the OpenAPI document: 7.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from admin_api.api.roles_api import RolesApi


class TestRolesApi(unittest.TestCase):
    """RolesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = RolesApi()

    def tearDown(self) -> None:
        pass

    def test_create_role(self) -> None:
        """Test case for create_role

        Create role
        """
        pass

    def test_delete_role(self) -> None:
        """Test case for delete_role

        Delete role
        """
        pass

    def test_get_role(self) -> None:
        """Test case for get_role

        Retrieve role
        """
        pass

    def test_get_roles(self) -> None:
        """Test case for get_roles

        List roles
        """
        pass

    def test_update_role(self) -> None:
        """Test case for update_role

        Update role
        """
        pass


if __name__ == '__main__':
    unittest.main()

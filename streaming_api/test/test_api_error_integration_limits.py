# coding: utf-8

"""
    ThousandEyes for OpenTelemetry

     Configure ThousandEyes to stream or push test data to a OpenTelemetry compliant endpoint with the ThousandEyes for OpenTelemetry API. 

    The version of the OpenAPI document: 7.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from streaming_api.models.api_error_integration_limits import ApiErrorIntegrationLimits

class TestApiErrorIntegrationLimits(unittest.TestCase):
    """ApiErrorIntegrationLimits unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiErrorIntegrationLimits:
        """Test ApiErrorIntegrationLimits
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiErrorIntegrationLimits`
        """
        model = ApiErrorIntegrationLimits()
        if include_optional:
            return ApiErrorIntegrationLimits(
                timestamp = 1679677853573,
                http_status = 'PRECONDITION_FAILED',
                errors = [
                    'User cannot create more than 5 integrations'
                    ],
                path = 'https://api.thousandeyes.com/v7/stream'
            )
        else:
            return ApiErrorIntegrationLimits(
        )
        """

    def testApiErrorIntegrationLimits(self):
        """Test ApiErrorIntegrationLimits"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
